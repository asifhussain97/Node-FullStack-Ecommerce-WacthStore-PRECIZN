<%- include('../layouts/headeradmin.ejs') %>
<div id="layoutSidenav_content">
    <main>
        <div class="container-fluid px-4">
            <div class="p-0 d-flex justify-content-between container-fluid">
                <h1 class="mt-4 mb-3">Add Category</h1>
            </div>
            <form action="/admin/addCategory" method="post" enctype="multipart/form-data" id="category-form" onsubmit="return validateCategory()">
                <section class="content-main">
                    <div class="row">
                        <div class="col-lg-6">
                            <div class="card mb-4">
                                <div class="card-header">
                                    <h4>Basic</h4>
                                </div>
                                <div class="card-body">
                                    <div class="mb-4">
                                        <label for="category_name" class="form-label">Category name</label>
                                        <input type="text" name="name" placeholder="Type here" class="form-control" id="category_name">
                                        <div class="error-message" style="color: red;" id="category_name-error"></div>
                                    </div>
                                    <div class="row gx-3">
                                        <div class="col-md-12 card mb-4">
                                            <div class="card-body">
        
                                                <!-- Existing HTML -->
                                                <div class="sub-container">
                                                    <div class="mb-4">
                                                        <label for="sub_category_name" class="form-label">Sub Category name</label>
                                                        <input type="text" name="sub_category[]" placeholder="Type here" class="form-control sub-category-input" id="sub_category_name_1">
                                                        <div class="error-message" style="color: red;" id="sub_category_name_1-error"></div>
                                                    </div>
                                                </div>
                                                <button type="button" class="btn btn-primary mt-3" onclick="addSub()">Add Sub Category</button>

                                            </div>
                                        </div>
                                    </div>
                                    <div class="mb-4">
                                        <label class="form-label">Full description</label>
                                        <textarea name="description" id="description" placeholder="Type here" class="form-control" rows="4"></textarea>
                                        <div class="error-message" style="color: red;" id="description-error"></div>
                                    </div>
                                </div>
                            </div> <!-- card end// -->
                        </div>
                        <div class="col-lg-3">
                            <div class="card mb-4">
                                <div class="card-header">
                                    <h4>Picture</h4>
                                </div>
                                <div class="card-body">
                                    <div class="input-upload">
                                        <div class="images-container">
                                            <div class="image-preview-container d-flex flex-wrap justify-content-center">
                                                <!-- Placeholder for default image -->
                                                <div class="image-container border-1">
                                                    <img style="width: 100px; height: 100px; margin-bottom: 20px;" src="/uploadimage.svg" alt="Default" class="image-preview" id="category_image_preview">
                                                </div>
                                            </div>
                                            <input class="form-control" type="file" name="image" id="category_image">
                                        </div>
                                        <div class="error-message" style="color: red;" id="category_image-error"></div>
                                    </div>
                                </div>
                            </div> <!-- card end// -->
                            <div>
                                <input type="submit" value="submit" class="btn btn-primary btn-md rounded font-sm hover-up">
                            </div>
                        </div>
                    </div>
                </section> <!-- content-main end// -->
            </form>
            <div style="position: relative; width: 100%;" class="justify-content-center text-center">
                <% 
                if (typeof errorMessage !== 'undefined') {
                %>
                <p style="position: absolute; transform: translate(-50%, -50%); left: 50%; color: crimson; white-space: nowrap;"><%= errorMessage %></p>
                <%
                }
                %>
            </div>
        </div>
    </main>
    <script>
        document.addEventListener('DOMContentLoaded', function() {
        const categoryImageInput = document.getElementById('category_image');
        const categoryImagePreview = document.getElementById('category_image_preview');

        categoryImageInput.addEventListener('change', function() {
            displayCategoryImage(this, categoryImagePreview);
            });
        });

        function displayCategoryImage(input, preview) {
            const file = input.files[0];
            const reader = new FileReader();

            reader.onload = function(e) {
                preview.src = e.target.result;
            };

            if (file) {
                reader.readAsDataURL(file);
            } else {
                preview.src = '/uploadimage.svg';
            }
        }
        
        let subCategoryCounter = 1;

        function addSub() {
            const subContainer = document.querySelector('.sub-container');
            const newDiv = document.createElement('div');
            const currentCounter = subCategoryCounter + 1; // Store current counter value
            newDiv.classList.add('mb-4');
            newDiv.innerHTML = `
                <label for="sub_category_name_${currentCounter}" class="form-label">Sub Category name</label>
                <input type="text" name="sub_category[]" placeholder="Type here" class="form-control sub-category-input" id="sub_category_name_${currentCounter}">
                <div class="error-message" style="color: red;" id="sub_category_name_${currentCounter}-error"></div>
                <button type="button" class="btn btn-danger mt-3" onclick="removeSub(this)">Remove Sub Category</button>
            `;
            subContainer.appendChild(newDiv);
            subCategoryCounter++;
        }

        function removeSub(button) {
            const subContainer = document.querySelector('.sub-container');
            const currentDiv = button.parentNode; // Access the parent div of the clicked button
            subContainer.removeChild(currentDiv); // Remove the specific sub-category div
        }

        document.addEventListener('DOMContentLoaded', function() {
            const category_name = document.getElementById("category_name");
            const category_name_error = document.getElementById("category_name-error");
            const description = document.getElementById("description");
            const description_error = document.getElementById("description-error");
            const category_image = document.getElementById("category_image");
            const category_image_error = document.getElementById("category_image-error");
    
            category_name.addEventListener('input', function() {
                category_name_error.innerHTML = category_name.value.trim() === "" ? "Please enter category name" : "";
            });
    
            description.addEventListener('input', function() {
                description_error.innerHTML = description.value.trim() === "" ? "Please enter category description" : "";
            });
    
            category_image.addEventListener('change', function() {
                category_image_error.innerHTML = category_image.value.trim() === "" ? "Please enter category image" : "";
            });
        });
        
        function validateCategory() {
            const form = document.getElementById('category-form');
            const allowedFormats = ['image/jpeg', 'image/png', 'image/webp', 'image/jpg'];

            const category_name = document.getElementById("category_name").value.trim();
            const description = document.getElementById("description").value.trim();
            const category_image = document.getElementById("category_image");

            const category_name_error = document.getElementById("category_name-error");
            const description_error = document.getElementById("description-error");
            const category_image_error = document.getElementById("category_image-error");

            let formIsValid = true;

            if (category_name.trim() === "") {
                category_name_error.innerHTML = "Please enter category name";
                formIsValid = false;
            } else {
                category_name_error.innerHTML = "";
            }

            if (description.trim() === "") {
                description_error.innerHTML = "Please enter description";
                formIsValid = false;
            } else {
                description_error.innerHTML = "";
            }

            if (category_image.files.length === 0) {
                category_image_error.innerHTML = "Please select an image";
                formIsValid = false;
            } else {
                let validFormat = true;
                for (let i = 0; i < category_image.files.length; i++) {
                    if (!allowedFormats.includes(category_image.files[i].type)) {
                        validFormat = false;
                        break;
                    }
                }
                if (!validFormat) {
                    category_image_error.innerHTML = "Please select correct image format";
                    formIsValid = false;
                } else {
                    category_image_error.innerHTML = "";
                }
            }

            function validateSubCategory() {
                let isValid = true;
                const subCategoryInputs = document.querySelectorAll('.sub-category-input');
                const subCategoryErrors = document.querySelectorAll('[id^="sub_category_name_"]');

                subCategoryErrors.forEach(error => (error.innerHTML = '')); // Clear previous error messages

                const lowerCaseValues = [...subCategoryInputs].map(input => input.value.trim().toLowerCase());

                subCategoryInputs.forEach((input, index) => {
                    const value = input.value.trim();
                    const errorDiv = document.getElementById(`sub_category_name_${index + 1}-error`);

                    if (value === '') {
                        errorDiv.innerHTML = 'Please enter sub-category';
                        isValid = false;
                    } else if (lowerCaseValues.indexOf(value.toLowerCase()) !== index) {
                        errorDiv.innerHTML = 'Sub-categories must be unique';
                        isValid = false;
                    }
                });

                return isValid;
            }
            // Validate sub-categories
            const subCategoryValid = validateSubCategory();

            return formIsValid && subCategoryValid;        
        }

        document.addEventListener('DOMContentLoaded', function() {
            const form = document.getElementById('category-form');
            form.addEventListener('submit', function(event) {
                if (!validateCategory()) {
                    event.preventDefault(); // Prevent form submission if validation fails
                }
            });
        });
    </script>
    
<%- include('../layouts/footeradmin.ejs') %>